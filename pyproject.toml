[tool.poetry]
name = "arbitrage-hero"
version = "0.1.0"
description = "Consolidated Arbitrage Hero repricer system with FastAPI"
authors = ["Arbitrage Hero Team"]
readme = "README.md"
packages = [{include = "src"}]

[tool.poetry.dependencies]
python = "^3.11"
# FastAPI stack
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = {extras = ["email"], version = "^2.5.0"}
pydantic-settings = "^2.1.0"

# Database
sqlalchemy = "^2.0.23"
alembic = "^1.13.1"
psycopg2-binary = "^2.9.9"

# Authentication
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.6"

# Task queue
celery = "^5.3.4"
redis = "^5.0.1"

# AWS and Amazon integrations
boto3 = "^1.34.0"
python-amazon-sp-api = "^1.0.0"

# Message queuing
confluent-kafka = "^2.3.0"
kafka-python = "^2.0.2"

# HTTP client
httpx = "^0.25.2"

# Utilities
loguru = "^0.7.2"
python-dotenv = "^1.0.0"
pytz = "^2023.3"
prettytable = "^3.9.0"

[tool.poetry.group.dev.dependencies]
# Testing
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
httpx = "^0.25.2"  # For FastAPI TestClient

# Code quality
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.1"

# Local development
localstack = "^3.0.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "-v --tb=short --cov=src --cov-report=term-missing --ignore=tests/bad"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "auth: marks tests related to authentication",
    "strategy: marks tests related to pricing strategies", 
    "feed: marks tests related to feed submission",
    "listing: marks tests related to listings",
    "basic_pricing: marks basic pricing strategy tests",
    "lowest_price: marks lowest price strategy tests",
    "buybox: marks buybox strategy tests",
    "b2b: marks B2B pricing strategy tests",
    "fba_pricing: marks FBA pricing strategy tests"
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
strict_equality = true