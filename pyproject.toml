[project]
name = "urepricer"
version = "0.1.0"
description = ""
authors = [
    {name = "l3acucm",email = "l3acucm@gmail.com"}
]
readme = "README.md"
requires-python = ">=3.13,<4.0"
dependencies = [
    "fastapi (>=0.116.1,<0.117.0)",
    "pydantic[email] (>=2.11.7,<3.0.0)",
    "pydantic-settings (>=2.10.1,<3.0.0)",
    "redis-om (>=0.3.5,<0.4.0)",
    "redis (>=3.5.3,<6.0.0)",
    "boto3 (>=1.40.28,<2.0.0)",
    "structlog (>=25.4.0,<26.0.0)",
    "locust (>=2.40.2,<3.0.0)",
    "prettytable (>=3.16.0,<4.0.0)",
    "pytest-asyncio (>=1.1.0,<2.0.0)",
    "fakeredis (>=2.31.1,<3.0.0)",
    "pytest-mock (>=3.15.0,<4.0.0)",
    "pytest-cov (>=7.0.0,<8.0.0)",
    "loguru (>=0.7.3,<0.8.0)",
    "uvicorn[standard] (>=0.35.0,<0.36.0)",
    "httpx (>=0.28.1,<0.29.0)",
    "mysql-connector-python (>=9.1.0,<10.0.0)",
    "celery[redis] (>=5.5.3,<6.0.0)",
    "dependency-injector (>=4.41.0,<5.0.0)"
]

[tool.poetry]
package-mode = false

[tool.poetry.group.dev.dependencies]
fakeredis = "^2.31.1"
pytest = "^8.4.2"
pytest-asyncio = "^1.1.0"
awscli-local = "^0.22.2"
ruff = "^0.8.4"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html:htmlcov"
]

markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests", 
    "e2e: marks tests as end-to-end tests",
    "asyncio: marks tests as async tests",
]

[tool.pytest_asyncio]
asyncio_mode = "auto"

filterwarnings = [
    "ignore:Monkey-patching ssl:UserWarning"
]

[tool.ruff]
# Exclude common directories
exclude = [
    ".bzr",
    ".direnv", 
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "__pycache__",
]

# Same as Black's line length
line-length = 88
indent-width = 4

# Target Python 3.13
target-version = "py313"

[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default
select = ["E4", "E7", "E9", "F", "I"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Use double quotes for strings
quote-style = "double"

# Indent with spaces, rather than tabs
indent-style = "space"

# Respect magic trailing comma
skip-magic-trailing-comma = false

# Automatically detect the appropriate line ending
line-ending = "auto"
